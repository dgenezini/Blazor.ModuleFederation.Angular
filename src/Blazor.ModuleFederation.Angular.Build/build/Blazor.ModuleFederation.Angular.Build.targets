<Project>
  <PropertyGroup>
	  <_TaskDll>$(MSBuildThisFileDirectory)..\tasks\net6.0\Blazor.ModuleFederation.Angular.Build.dll</_TaskDll>
	  <_JsFilesPath>$(MSBuildThisFileDirectory)..\lib\net6.0\js\</_JsFilesPath>
  </PropertyGroup>

  <Target Name="HackRazorSdk">
    <ItemGroup>
      <!-- Add RazorComponent files to the set of files to be code-gened. -->
      <RazorGenerateWithTargetPath Include="@(RazorComponentWithTargetPath)" />
    </ItemGroup>
    <ItemGroup>
      <RazorReferencePath Include="@(ReferencePath)" />
      <RazorReferencePath Include="$(TargetPath)" />
    </ItemGroup>
  </Target>

  <UsingTask TaskName="GenerateAngularComponents" AssemblyFile="$(_TaskDll)" />

  <Target Name="GenerateJavaScriptComponents" 
          AfterTargets="CopyFilesToOutputDirectory" 
          DependsOnTargets="HackRazorSdk;ResolveTagHelperRazorGenerateInputs">
    <GenerateAngularComponents OutputPath="$(OutputPath)"
							   JsFilesPath="$(_JsFilesPath)"
                               IntermediateOutputPath="$(IntermediateOutputPath)" 
                               AssemblyName="$(AssemblyName)" 
                               JavaScriptComponentOutputDirectory="$(JavaScriptOutputPath)"
                               ModuleFederationName="$(ModuleFederationName)"
							   MicroFrontendBaseUrl="$(MicroFrontendBaseUrl)"/>
  </Target>

    
  <PropertyGroup>
    <AngularEnvironment Condition="'$(IsProduction)' == 'True'">production</AngularEnvironment>
	<AngularEnvironment Condition="'$(IsProduction)' != 'True'">development</AngularEnvironment>
  </PropertyGroup>

  <Target Name="NpmBuild" 
          Condition="'$(BuildModuleFederationScript)' == 'True'"
          AfterTargets="GenerateJavaScriptComponents">
	<Exec Command="npm install" WorkingDirectory="$(JavaScriptOutputPath)" />
    <Exec Command="ng run blazormodulefederation:build:$(AngularEnvironment)" 
          WorkingDirectory="$(JavaScriptOutputPath)" />
  </Target>
</Project>
